#!/bin/sh -l
set -e

setup-ssh

app_name="$(parse-app-name)"
ssh_remote="ssh://dokku@$(parse-ssh-host):$(parse-ssh-port)"

if [ "$COMMAND" = "review-apps:create" ] || [ "$COMMAND" = 'review-apps:destroy' ]; then
  if [ -z "$REVIEW_APP_NAME" ]; then
    CI_BRANCH_NAME=""
    if [ -n "$CI_COMMIT_REF_NAME" ]; then
      # gitlab-ci
      CI_BRANCH_NAME="$CI_COMMIT_REF_NAME"
    elif [ -n "$GITHUB_REF" ]; then
      # github actions
      CI_BRANCH_NAME="${GITHUB_REF#refs/heads/}"
    elif [ -n "$CIRCLE_BRANCH" ]; then
      # circleci
      CI_BRANCH_NAME="$CIRCLE_BRANCH"
    elif [ -n "$TRAVIS_BRANCH" ]; then
      # travisci
      CI_BRANCH_NAME="$TRAVIS_BRANCH"
    elif [ -n "$SEMAPHORE_GIT_BRANCH" ]; then
      # semaphoreci
      CI_BRANCH_NAME="SEMAPHORE_GIT_BRANCH"
    elif [ -n "$CI_BRANCH" ]; then
      # cloudbees
      CI_BRANCH_NAME="CI_BRANCH"
    elif [ -n "$DRONE_COMMIT_BRANCH" ]; then
      # drone
      CI_BRANCH_NAME="DRONE_COMMIT_BRANCH"
    else
      log-error "Unable to detect branch name and cannot generate review app name"
      exit 1
    fi

    CI_BRANCH_NAME="$(echo "$CI_BRANCH_NAME" | tr '[:upper:]' '[:lower:]' | sed "s/[[:alpha:].-]/-/g")"
    REVIEW_APP_NAME="review-${app_name}-${CI_BRANCH_NAME}"
    log-info "No review app name specified, using $REVIEW_APP_NAME"
  fi
fi

if [ "$COMMAND" = "review-app:destroy" ]; then
  log-info "Destroying review app '${REVIEW_APP_NAME}'"
  ssh "$ssh_remote" -- --force apps:destroy "$REVIEW_APP_NAME"
  exit 0
fi

if [ -n "$COMMAND" ] && [ "$COMMAND" != "review-apps:create" ] && [ "$COMMAND" != "deploy" ]; then
  log-error "Invalid command specified"
  exit 1
fi

if [ "$COMMAND" = "review-apps:create" ]; then
  log-info "Ensuring review app '${REVIEW_APP_NAME}' exists"
  ssh "$ssh_remote" -- apps:clone --skip-deploy --ignore-existing "$app_name" "$REVIEW_APP_NAME"
fi

log-info "Pushing to Dokku Host"

if [ -n "$REVIEW_APP_NAME" ] && [ "$app_name" != "$REVIEW_APP_NAME" ]; then
  GIT_REMOTE_URL="${GIT_REMOTE_URL%"/$app_name"}/${REVIEW_APP_NAME}"
fi

git push "$GIT_PUSH_FLAGS" "$GIT_REMOTE_URL" "$GITHUB_SHA:refs/heads/$BRANCH" --force
